"use client";

import { useRef } from "react";
import clsx from "clsx";

type AnimatedButtonProps = {
  label: string;
  className?: string;
  onClick?: () => void;
  href?: string;
  type?: "button" | "submit" | "reset";
  disabled?: boolean;
};

export default function AnimatedButton({
  label,
  className = "",
  onClick,
  href,
  type,
  disabled,
}: AnimatedButtonProps) {
  const buttonRef = useRef<HTMLAnchorElement | HTMLButtonElement>(null);
  const outlineRef = useRef<HTMLDivElement>(null);

  // Removed mouse move handlers and useEffect

  // Determine if link is external
  const isExternal = href && /^https?:\/\//i.test(href);

  if (type) {
    return (
      <button
        ref={buttonRef as React.RefObject<HTMLButtonElement>}
        onClick={onClick}
        disabled={disabled}
        type={type}
        className={clsx("button", className)}
      >

        <div ref={outlineRef} className="button-text flex items-center gap-2">
          <div className="text-anim">
            <span className="first_text">{label}</span>
            <span className="second_text">{label}</span>
          </div>
          <span className="btn-svg">
            <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M11.1625 2.47132L1.19393 12.6461C1.05168 12.7912 0.972933 12.987 0.975014 13.1902C0.977094 13.3935 1.05983 13.5876 1.20502 13.7298C1.35021 13.8721 1.54596 13.9508 1.74921 13.9488C1.95246 13.9467 2.14656 13.8639 2.28881 13.7188L12.2574 3.54401L12.3372 11.4481C12.3393 11.6516 12.4221 11.8459 12.5675 11.9884C12.7129 12.1308 12.9089 12.2096 13.1124 12.2076C13.3159 12.2055 13.5102 12.1226 13.6526 11.9773C13.7951 11.8319 13.8739 11.6359 13.8718 11.4324L13.772 1.67829C13.7711 1.57749 13.7503 1.47785 13.7108 1.38509C13.6714 1.29233 13.614 1.20827 13.542 1.13773C13.47 1.06718 13.3847 1.01153 13.2912 0.973965C13.1976 0.936403 13.0976 0.917664 12.9968 0.918823L3.24271 1.01866C3.03921 1.02075 2.84486 1.10359 2.70244 1.24896C2.56001 1.39433 2.48116 1.59033 2.48325 1.79384C2.48533 1.99735 2.56817 2.19169 2.71354 2.33412C2.85892 2.47655 3.05492 2.55539 3.25842 2.55331L11.1625 2.47132Z" fill="#0F0F0F" />
            </svg>
            <svg width="22" height="22" viewBox="0 0 24 24"  className="whatsapp" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M19.05 4.90999C18.1331 3.9841 17.041 3.24996 15.8375 2.75036C14.634 2.25075 13.3431 1.99568 12.04 1.99999C6.57999 1.99999 2.12999 6.44999 2.12999 11.91C2.12999 13.66 2.58999 15.36 3.44999 16.86L2.04999 22L7.29999 20.62C8.74999 21.41 10.38 21.83 12.04 21.83C17.5 21.83 21.95 17.38 21.95 11.92C21.95 9.26999 20.92 6.77999 19.05 4.90999ZM12.04 20.15C10.56 20.15 9.10999 19.75 7.83999 19L7.53999 18.82L4.41999 19.64L5.24999 16.6L5.04999 16.29C4.22754 14.9771 3.79091 13.4593 3.78999 11.91C3.78999 7.36999 7.48999 3.66999 12.03 3.66999C14.23 3.66999 16.3 4.52999 17.85 6.08999C18.6176 6.85386 19.2259 7.76254 19.6396 8.76332C20.0533 9.76411 20.2642 10.8371 20.26 11.92C20.28 16.46 16.58 20.15 12.04 20.15ZM16.56 13.99C16.31 13.87 15.09 13.27 14.87 13.18C14.64 13.1 14.48 13.06 14.31 13.3C14.14 13.55 13.67 14.11 13.53 14.27C13.39 14.44 13.24 14.46 12.99 14.33C12.74 14.21 11.94 13.94 11 13.1C10.26 12.44 9.76999 11.63 9.61999 11.38C9.47999 11.13 9.59999 11 9.72999 10.87C9.83999 10.76 9.97999 10.58 10.1 10.44C10.22 10.3 10.27 10.19 10.35 10.03C10.43 9.85999 10.39 9.71999 10.33 9.59999C10.27 9.47999 9.76999 8.25999 9.56999 7.75999C9.36999 7.27999 9.15999 7.33999 9.00999 7.32999H8.52999C8.35999 7.32999 8.09999 7.38999 7.86999 7.63999C7.64999 7.88999 7.00999 8.48999 7.00999 9.70999C7.00999 10.93 7.89999 12.11 8.01999 12.27C8.13999 12.44 9.76999 14.94 12.25 16.01C12.84 16.27 13.3 16.42 13.66 16.53C14.25 16.72 14.79 16.69 15.22 16.63C15.7 16.56 16.69 16.03 16.89 15.45C17.1 14.87 17.1 14.38 17.03 14.27C16.96 14.16 16.81 14.11 16.56 13.99Z" fill="#09424D" />
            </svg>
          </span>

        </div>
      </button>
    );
  }

  return (
    <a
      ref={buttonRef as React.RefObject<HTMLAnchorElement>}
      onClick={onClick}
      href={href}
      target={isExternal ? "_blank" : undefined}
      rel={isExternal ? "noopener noreferrer" : undefined}
      className={clsx("button", className)}
      download={href?.endsWith(".pdf") ? true : undefined}
    >
      <div ref={outlineRef} className="button-text flex items-center gap-2">
        <div className="text-anim">
          <span className="first_text">{label}</span>
          <span className="second_text">{label}</span>
        </div>
        <span className="btn-svg">
          <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.1625 2.47132L1.19393 12.6461C1.05168 12.7912 0.972933 12.987 0.975014 13.1902C0.977094 13.3935 1.05983 13.5876 1.20502 13.7298C1.35021 13.8721 1.54596 13.9508 1.74921 13.9488C1.95246 13.9467 2.14656 13.8639 2.28881 13.7188L12.2574 3.54401L12.3372 11.4481C12.3393 11.6516 12.4221 11.8459 12.5675 11.9884C12.7129 12.1308 12.9089 12.2096 13.1124 12.2076C13.3159 12.2055 13.5102 12.1226 13.6526 11.9773C13.7951 11.8319 13.8739 11.6359 13.8718 11.4324L13.772 1.67829C13.7711 1.57749 13.7503 1.47785 13.7108 1.38509C13.6714 1.29233 13.614 1.20827 13.542 1.13773C13.47 1.06718 13.3847 1.01153 13.2912 0.973965C13.1976 0.936403 13.0976 0.917664 12.9968 0.918823L3.24271 1.01866C3.03921 1.02075 2.84486 1.10359 2.70244 1.24896C2.56001 1.39433 2.48116 1.59033 2.48325 1.79384C2.48533 1.99735 2.56817 2.19169 2.71354 2.33412C2.85892 2.47655 3.05492 2.55539 3.25842 2.55331L11.1625 2.47132Z" fill="#0F0F0F" />
          </svg>
          <svg width="22" height="22" viewBox="0 0 24 24" fill="none" className="whatsapp" xmlns="http://www.w3.org/2000/svg">
            <path d="M19.05 4.90999C18.1331 3.9841 17.041 3.24996 15.8375 2.75036C14.634 2.25075 13.3431 1.99568 12.04 1.99999C6.57999 1.99999 2.12999 6.44999 2.12999 11.91C2.12999 13.66 2.58999 15.36 3.44999 16.86L2.04999 22L7.29999 20.62C8.74999 21.41 10.38 21.83 12.04 21.83C17.5 21.83 21.95 17.38 21.95 11.92C21.95 9.26999 20.92 6.77999 19.05 4.90999ZM12.04 20.15C10.56 20.15 9.10999 19.75 7.83999 19L7.53999 18.82L4.41999 19.64L5.24999 16.6L5.04999 16.29C4.22754 14.9771 3.79091 13.4593 3.78999 11.91C3.78999 7.36999 7.48999 3.66999 12.03 3.66999C14.23 3.66999 16.3 4.52999 17.85 6.08999C18.6176 6.85386 19.2259 7.76254 19.6396 8.76332C20.0533 9.76411 20.2642 10.8371 20.26 11.92C20.28 16.46 16.58 20.15 12.04 20.15ZM16.56 13.99C16.31 13.87 15.09 13.27 14.87 13.18C14.64 13.1 14.48 13.06 14.31 13.3C14.14 13.55 13.67 14.11 13.53 14.27C13.39 14.44 13.24 14.46 12.99 14.33C12.74 14.21 11.94 13.94 11 13.1C10.26 12.44 9.76999 11.63 9.61999 11.38C9.47999 11.13 9.59999 11 9.72999 10.87C9.83999 10.76 9.97999 10.58 10.1 10.44C10.22 10.3 10.27 10.19 10.35 10.03C10.43 9.85999 10.39 9.71999 10.33 9.59999C10.27 9.47999 9.76999 8.25999 9.56999 7.75999C9.36999 7.27999 9.15999 7.33999 9.00999 7.32999H8.52999C8.35999 7.32999 8.09999 7.38999 7.86999 7.63999C7.64999 7.88999 7.00999 8.48999 7.00999 9.70999C7.00999 10.93 7.89999 12.11 8.01999 12.27C8.13999 12.44 9.76999 14.94 12.25 16.01C12.84 16.27 13.3 16.42 13.66 16.53C14.25 16.72 14.79 16.69 15.22 16.63C15.7 16.56 16.69 16.03 16.89 15.45C17.1 14.87 17.1 14.38 17.03 14.27C16.96 14.16 16.81 14.11 16.56 13.99Z" fill="#09424D" />
          </svg>


        </span>
      </div>
    </a>
  );
}
